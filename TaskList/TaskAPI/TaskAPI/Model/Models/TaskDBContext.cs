// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace TaskAPI.Models
{
    public partial class TaskDBContext : DbContext
    {
        public TaskDBContext()
        {
        }

        public TaskDBContext(DbContextOptions<TaskDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Administrators> Administrators { get; set; }
        public virtual DbSet<Employees> Employees { get; set; }
        public virtual DbSet<Passwords> Passwords { get; set; }
        public virtual DbSet<TaskAssignments> TaskAssignments { get; set; }
        public virtual DbSet<Tasks> Tasks { get; set; }
        public virtual DbSet<Users> Users { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Administrators>(entity =>
            {
                entity.HasKey(e => e.AdminId)
                    .HasName("PK__Administ__43AA414125BACF9A");

                entity.HasIndex(e => e.UserId, "UQ__Administ__B9BE370E98053697")
                    .IsUnique();

                entity.Property(e => e.AdminId).HasColumnName("admin_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithOne(p => p.Administrators)
                    .HasForeignKey<Administrators>(d => d.UserId)
                    .HasConstraintName("FK__Administr__user___4E88ABD4");
            });

            modelBuilder.Entity<Employees>(entity =>
            {
                entity.HasKey(e => e.EmployeeId)
                    .HasName("PK__Employee__C52E0BA83EACCE5C");

                entity.HasIndex(e => e.EmployeeNumber, "UQ__Employee__8C453B0D7C967611")
                    .IsUnique();

                entity.HasIndex(e => e.UserId, "UQ__Employee__B9BE370ECAE0CDD7")
                    .IsUnique();

                entity.Property(e => e.EmployeeId).HasColumnName("employee_id");

                entity.Property(e => e.EmployeeNumber)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("employee_number");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithOne(p => p.Employees)
                    .HasForeignKey<Employees>(d => d.UserId)
                    .HasConstraintName("FK__Employees__user___59FA5E80");
            });

            modelBuilder.Entity<Passwords>(entity =>
            {
                entity.HasKey(e => e.PasswordId)
                    .HasName("PK__Password__82B1190EA16CCA3E");

                entity.HasIndex(e => e.UserId, "UQ__Password__B9BE370EEC7634D2")
                    .IsUnique();

                entity.Property(e => e.PasswordId).HasColumnName("password_id");

                entity.Property(e => e.Hash)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("hash");

                entity.Property(e => e.Salt)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("salt");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithOne(p => p.Passwords)
                    .HasForeignKey<Passwords>(d => d.UserId)
                    .HasConstraintName("FK__Passwords__user___5DCAEF64");
            });

            modelBuilder.Entity<TaskAssignments>(entity =>
            {
                entity.HasKey(e => e.AssignmentId)
                    .HasName("PK__TaskAssi__DA8918142D9C8644");

                entity.Property(e => e.AssignmentId).HasColumnName("assignment_id");

                entity.Property(e => e.AdminId).HasColumnName("admin_id");

                entity.Property(e => e.AssignmentDate)
                    .HasColumnType("date")
                    .HasColumnName("assignment_date");

                entity.Property(e => e.Comment)
                    .HasColumnType("text")
                    .HasColumnName("comment");

                entity.Property(e => e.TaskId).HasColumnName("task_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Admin)
                    .WithMany(p => p.TaskAssignments)
                    .HasForeignKey(d => d.AdminId)
                    .HasConstraintName("FK__TaskAssig__admin__5441852A");

                entity.HasOne(d => d.Task)
                    .WithMany(p => p.TaskAssignments)
                    .HasForeignKey(d => d.TaskId)
                    .HasConstraintName("FK__TaskAssig__task___534D60F1");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.TaskAssignments)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__TaskAssig__user___5535A963");
            });

            modelBuilder.Entity<Tasks>(entity =>
            {
                entity.HasKey(e => e.TaskId)
                    .HasName("PK__Tasks__0492148D2F3AAE83");

                entity.Property(e => e.TaskId).HasColumnName("task_id");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("date")
                    .HasColumnName("creation_date");

                entity.Property(e => e.Description)
                    .HasColumnType("text")
                    .HasColumnName("description");

                entity.Property(e => e.DueDate)
                    .HasColumnType("date")
                    .HasColumnName("due_date");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("status");
            });

            modelBuilder.Entity<Users>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("PK__Users__B9BE370F48C59730");

                entity.HasIndex(e => e.Email, "UQ__Users__AB6E616445DE864A")
                    .IsUnique();

                entity.HasIndex(e => e.Dni, "UQ__Users__D87608A7BB4EDEBD")
                    .IsUnique();

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.Dni)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dni");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Role)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("role");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}